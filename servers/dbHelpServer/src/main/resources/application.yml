#redis setting
spring:
  datasource:
    druid:
      filter:
        slf4j:
          enable: true
      stat-view-servlet:
        # 是否启用StatViewServlet默认值true
        enabled: true
        # 访问路径为/druid时，跳转到StatViewServlet
        url-pattern: /druid/*
        # 是否能够重置数据
        reset-enable: false
# 数据库密码解密key
security-key:
  jwt-key: '022bdc63c3c5a45879ee6581508b9d03adfec4a4658c0ab3d722e50c91a351c42c231cf43bb8f86998202bd301ec52239a74fc0c9a9aeccce604743367c9646b'
  md5-key: 'consmationecasof'
  md5-pwd-key: 'johnny depp'
#数据源配置
eca:
  # 默认连接池配置
  defaultDruidConfig:
    # 初始化时建立物理连接的个数
    initialSize: 5
    # 连接池的最小空闲数量
    minIdle: 5
    # 连接池最大连接数量
    maxActive: 200
    # 获取连接时最大等待时间，单位毫秒
    maxWait: 800
    # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    testWhileIdle: true
    # 既作为检测的间隔时间又作为testWhileIdel执行的依据
    timeBetweenEvictionRunsMillis: 60000
    # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接(配置连接在池中的最小生存时间)
    minEvictableIdleTimeMillis: 30000
    # 用来检测数据库连接是否有效的sql 必须是一个查询语句(oracle中为 select 1 from dual)
    validationQuery: select 1
    # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
    testOnBorrow: true
    # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
    testOnReturn: false
    # 是否缓存preparedStatement, 也就是PSCache,PSCache对支持游标的数据库性能提升巨大，比如说oracle,在mysql下建议关闭。
    poolPreparedStatements: false
    # 置监控统计拦截的filters，去掉后监控界面sql无法统计，stat: 监控统计、Slf4j:日志记录、waLL: 防御sqL注入
    filters: stat,wall,slf4j
    # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
    maxPoolPreparedStatementPerConnectionSize: -1
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  data-sources:
    - guid: 12345678-0000-467d-8609-473195a02fcc
      name: Mysql
      username: root
      password: ZGiPB4Kc6K4=
      url: jdbc:mysql://127.0.0.1:3306/eca_mysql?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull
      druid:
        # 初始化时建立物理连接的个数
        initialSize: 5
        # 连接池的最小空闲数量
        minIdle: 5
        # 连接池最大连接数量
        maxActive: 200
        # 获取连接时最大等待时间，单位毫秒
        maxWait: 800
        # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
        testWhileIdle: true
        # 既作为检测的间隔时间又作为testWhileIdel执行的依据
        timeBetweenEvictionRunsMillis: 60000
        # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接(配置连接在池中的最小生存时间)
        minEvictableIdleTimeMillis: 30000
        # 用来检测数据库连接是否有效的sql 必须是一个查询语句(oracle中为 select 1 from dual)
        validationQuery: select 1
        # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
        testOnBorrow: true
        # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
        testOnReturn: false
        # 是否缓存preparedStatement, 也就是PSCache,PSCache对支持游标的数据库性能提升巨大，比如说oracle,在mysql下建议关闭。
        poolPreparedStatements: false
        # 置监控统计拦截的filters，去掉后监控界面sql无法统计，stat: 监控统计、Slf4j:日志记录、waLL: 防御sqL注入
        filters: stat,wall,slf4j
        # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
        maxPoolPreparedStatementPerConnectionSize: -1
        # 合并多个DruidDataSource的监控数据
        useGlobalDataSourceStat: true
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


  licence: ZXlKRVpYWnBZMlZKUkNJNklrRkNRMFJGUmtjaUxDSk1hV05sYm1ObFFYQndJam9pUlVOQk1pNHdMVXBCVmtFaUxDSk1hV05sYm1ObFJXNWtJam9pTWpBeU5DMHdOaTB6TUNKOSBtTDBOOWQrMlhwbWRUMkdTRU9QVmExWDRKTmhCV3lrNHFGRTJPZEN4eWx2TDE5NG9GM2syYWNVeXI1eVhjQVkvTzR0SXJUZFM2a0tDRVltbEJuMWFva0pHbG1NbW9ieHlqQXdQbFhzWThYMHIzd1dHN2VVOFNkNE1BK215YjU5WU9PNmhTbUpYSEtKT0x6Q0NPRUpXc0NQSnVBanBJbmpneEl4bkdSMkthK3M9
